
from argparse import ArgumentParser, REMAINDER


class Command(ArgumentParser):
    def __init__(self, function=None, name=None, **kwargs):
        if function is not None:
            self.run = function
        kwargs.setdefault('prog', name or function.__name__)
        kwargs.setdefault('description', function.__doc__)
        self.name = kwargs['prog']
        super().__init__(**kwargs)

    def __call__(self, command, arguments):
        try:
            arguments = self.parse_args(arguments)
        except SystemExit:
            # SystemExit is generated by --help.  We catch it here to
            #  return to the shell instead of shutting down completely.
            return
        self.run(**vars(arguments))

    def add_argument(self, *args, **kwargs):
        if ('metavar' not in kwargs and
              kwargs.get('nargs') in ('*', '+', REMAINDER) and
              not args[0].startswith('-')):
            if args[0].endswith('ies'):
                kwargs['metavar'] = args[0][:-3] + 'y'
            elif args[0].endswith('s'):
                kwargs['metavar'] = args[0][:-1]
        return super().add_argument(*args, **kwargs)
